"e7576d7d364dc3182d62569f97763d097ebe2e1c"
[cl-struct-undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#2=[nil nil ((#("
" 0 1 (fontified t)) . 3418) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . 1) (undo-tree-id124 . 1) (undo-tree-id125 . 1) (undo-tree-id126 . 1) (undo-tree-id127 . 1) (undo-tree-id128 . 1) (undo-tree-id129 . 1) (undo-tree-id130 . 1) (undo-tree-id131 . -1)) nil (22563 63324 162329 0) 0 nil]) ((#("                print \"passes: \", passes" 0 16 (fontified t) 16 21 (fontified t face font-lock-keyword-face) 21 22 (fontified t) 22 23 (fontified t syntax-table #1=(15) face font-lock-string-face) 23 31 (fontified t face font-lock-string-face) 31 32 (fontified t syntax-table #1# face font-lock-string-face) 32 34 (fontified t) 34 40 (fontified t)) . 3418) (undo-tree-id132 . 22) (undo-tree-id133 . 21) (undo-tree-id134 . 20) (undo-tree-id135 . 20) (undo-tree-id136 . 20) (undo-tree-id137 . 20) (undo-tree-id138 . 40) (undo-tree-id139 . -40) (t 22563 61652 0 0)) nil (22563 63324 162343 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 3378) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . 1) (undo-tree-id111 . 1) (undo-tree-id112 . 1) (undo-tree-id113 . 1) (undo-tree-id114 . -1)) nil (22563 61652 948519 0) 0 nil]) ((#("                    print num_changed_alphas" 0 20 (fontified t) 20 25 (fontified t face font-lock-keyword-face) 25 26 (fontified t) 26 44 (fontified t)) . 3378) (undo-tree-id115 . -26) (undo-tree-id116 . -43) (undo-tree-id117 . 1) (undo-tree-id118 . 1) (undo-tree-id119 . 44) (undo-tree-id120 . -44) (t 22563 61647 0 0)) nil (22563 61652 948552 0) 0 nil]) ((3493 . 3494)) nil (22563 61647 787090 0) 0 nil]) ((3494 . 3502)) nil (22563 61647 787096 0) 0 nil]) ((3492 . 3493) (t 22563 61637 0 0)) nil (22563 61647 787099 0) 0 nil]) ((3486 . 3492) (3485 . 3487) (#("\"" 0 1 (fontified nil syntax-table #1#)) . -3485) (3485 . 3486) (#("\"" 0 1 (fontified nil syntax-table #1#)) . -3485) (3479 . 3486)) nil (22563 61637 410885 0) 0 nil]) ((3462 . 3479) (t 22563 61610 0 0)) nil (22563 61637 410894 0) 0 nil]) ((3404 . 3422) (#("num" 0 3 (fontified t)) . -3404) (undo-tree-id107 . 3)) nil (22563 61610 691374 0) 0 nil]) ((3398 . 3407)) nil (22563 61610 691379 0) 0 nil]) ((3377 . 3398) (t 22562 40571 0 0)) nil (22563 61610 691381 0) 0 nil]) ((1426 . 1428) (t 22562 39483 0 0)) nil (22562 40571 114063 0) 0 nil]) ((#("00" 0 2 (fontified t)) . 1426) (undo-tree-id102 . -1) (undo-tree-id103 . 1) (undo-tree-id104 . 1) (undo-tree-id105 . 2) (undo-tree-id106 . -2) (t 22562 36644 0 0)) nil (22562 39483 415144 0) 0 nil]) ((#(" " 0 1 (fontified t)) . -1319) (t 22562 36638 0 0)) nil (22562 36644 668267 0) 0 nil] [nil nil ((#("def predict(self, X):
        prd_0 = np.squeeze((self.A0 * self.Y_0_vs_all).T.dot(self.data.X_trn.dot(X.T)) + self.b0)
        prd_1 = np.squeeze((self.A1 * self.Y_1_vs_all).T.dot(self.data.X_trn.dot(X.T)) + self.b1)
        prd_2 = np.squeeze((self.A2 * self.Y_2_vs_all).T.dot(self.data.X_trn.dot(X.T)) + self.b2)
        results = []
        for i in range(X.shape[0]):
            if prd_0[i] > prd_1[i]:
                if prd_0[i] > prd_2[i]:
                    results.append(0)
                else:
                    results.append(2)
            else:
                if prd_1[i] > prd_2[i]:
                    results.append(1)
                else:
                    results.append(2)
        return " 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 11 (fontified t face font-lock-function-name-face) 11 12 (fontified t) 12 16 (fontified t face font-lock-keyword-face) 16 22 (fontified t) 22 30 (fontified t) 30 35 (fontified t face font-lock-variable-name-face) 35 50 (fontified t) 50 54 (fontified t face font-lock-keyword-face) 54 60 (fontified t) 60 64 (fontified t face font-lock-keyword-face) 64 83 (fontified t) 83 87 (fontified t face font-lock-keyword-face) 87 111 (fontified t) 111 115 (fontified t face font-lock-keyword-face) 115 120 (fontified t) 120 128 (fontified t) 128 133 (fontified t face font-lock-variable-name-face) 133 148 (fontified t) 148 152 (fontified t face font-lock-keyword-face) 152 158 (fontified t) 158 162 (fontified t face font-lock-keyword-face) 162 181 (fontified t) 181 185 (fontified t face font-lock-keyword-face) 185 209 (fontified t) 209 213 (fontified t face font-lock-keyword-face) 213 218 (fontified t) 218 226 (fontified t) 226 231 (fontified t face font-lock-variable-name-face) 231 246 (fontified t) 246 250 (fontified t face font-lock-keyword-face) 250 256 (fontified t) 256 260 (fontified t face font-lock-keyword-face) 260 279 (fontified t) 279 283 (fontified t face font-lock-keyword-face) 283 307 (fontified t) 307 311 (fontified t face font-lock-keyword-face) 311 316 (fontified t) 316 324 (fontified t) 324 331 (fontified t face font-lock-variable-name-face) 331 337 (fontified t) 337 345 (fontified t) 345 348 (fontified t face font-lock-keyword-face) 348 351 (fontified t) 351 353 (fontified t face font-lock-keyword-face) 353 354 (fontified t) 354 359 (fontified t face font-lock-builtin-face) 359 385 (fontified t) 385 387 (fontified t face font-lock-keyword-face) 387 425 (fontified t) 425 427 (fontified t face font-lock-keyword-face) 427 487 (fontified t) 487 503 (fontified t) 503 507 (fontified t face font-lock-keyword-face) 507 559 (fontified t) 559 563 (fontified t face font-lock-keyword-face) 563 581 (fontified t) 581 583 (fontified t face font-lock-keyword-face) 583 643 (fontified t) 643 659 (fontified t) 659 663 (fontified t face font-lock-keyword-face) 663 703 (fontified t) 703 711 (fontified t) 711 717 (fontified t face font-lock-keyword-face) 717 718 (fontified t)) . -602) (undo-tree-id43 . -251) (undo-tree-id44 . -83) (undo-tree-id45 . -83) (undo-tree-id46 . -315) (undo-tree-id47 . -476) (undo-tree-id48 . 242) (undo-tree-id49 . 242) (undo-tree-id50 . -251) (undo-tree-id51 . -315) (undo-tree-id52 . -251) (undo-tree-id53 . -251) (undo-tree-id54 . -251) (undo-tree-id55 . -251) (undo-tree-id56 . -251) (undo-tree-id57 . -251) (undo-tree-id58 . -251) (undo-tree-id59 . -251) (undo-tree-id60 . -251) (undo-tree-id61 . 403) (undo-tree-id62 . -251) (undo-tree-id63 . 382) (undo-tree-id64 . -251) (undo-tree-id65 . 346) (undo-tree-id66 . -251) (undo-tree-id67 . 310) (undo-tree-id68 . -251) (undo-tree-id69 . 273) (undo-tree-id70 . -251) (undo-tree-id71 . 233) (undo-tree-id72 . -251) (undo-tree-id73 . 210) (undo-tree-id74 . -251) (undo-tree-id75 . 173) (undo-tree-id76 . -251) (undo-tree-id77 . 154) (undo-tree-id78 . -251) (undo-tree-id79 . 117) (undo-tree-id80 . -251) (undo-tree-id81 . 77) (undo-tree-id82 . -251) (undo-tree-id83 . 54) (undo-tree-id84 . -251) (undo-tree-id85 . 17) (undo-tree-id86 . -251) (undo-tree-id87 . -251) (undo-tree-id88 . -711) (undo-tree-id89 . -711) (undo-tree-id90 . -251) (undo-tree-id91 . -251) (undo-tree-id92 . -251) (undo-tree-id93 . -251) (undo-tree-id94 . -251) (undo-tree-id95 . -251) (undo-tree-id96 . -251) (undo-tree-id97 . -251) (undo-tree-id98 . -251) (undo-tree-id99 . -251) (undo-tree-id100 . -251) (undo-tree-id101 . -251) (t 22562 36638 0 0)) ((602 . 1320)) (22562 36641 891965 0) 0 nil]) ((1313 . 1320)) nil (22562 36641 892624 0) 0 nil]) ((#("print" 0 5 (fontified t face font-lock-keyword-face)) . 1313) (undo-tree-id40 . 5) (undo-tree-id41 . 5) (undo-tree-id42 . -5) (t 22562 35183 0 0)) nil (22562 36638 924056 0) 0 nil]) ((131 . 137) (t 22562 35136 0 0)) nil (22562 35183 164054 0) 0 nil]) ((142 . 147)) nil (22562 35136 810213 0) 0 nil]) ((#("." 0 1 (fontified t)) . 146) (undo-tree-id29 . 1) (undo-tree-id30 . 1) (undo-tree-id31 . 1) (undo-tree-id32 . 1) (undo-tree-id33 . 1) (undo-tree-id34 . 1)) nil (22562 35136 810243 0) 0 nil]) ((#("self" 0 4 (fontified t face font-lock-keyword-face)) . 146) (undo-tree-id35 . 1) (undo-tree-id36 . 2) (undo-tree-id37 . 3) (undo-tree-id38 . 4) (undo-tree-id39 . -4) (t 22562 35127 0 0)) nil (22562 35136 810258 0) 0 nil]) ((142 . 152)) nil (22562 35127 265743 0) 0 nil]) ((134 . 142)) nil (22562 35127 265751 0) 0 nil]) ((134 . 135)) nil (22562 35127 265754 0) 0 nil]) ((128 . 131) (t 22562 35107 0 0)) nil (22562 35127 265757 0) 0 nil]) ((#(".05" 0 3 (fontified t)) . 1333) (undo-tree-id17 . 3) (undo-tree-id18 . 3) (undo-tree-id19 . 3) (undo-tree-id20 . 3) (undo-tree-id21 . -3)) nil (22562 35107 601007 0) 0 nil]) ((#("=0" 0 2 (fontified t)) . 1333) (undo-tree-id22 . 2) (undo-tree-id23 . 2) (undo-tree-id24 . 2) (undo-tree-id25 . -2)) nil (22562 35107 601022 0) 0 nil]) ((#(", C" 0 3 (fontified t)) . 1333) (undo-tree-id26 . 3) (undo-tree-id27 . 3) (undo-tree-id28 . -3)) nil (22562 35107 601033 0) 0 nil]) ((1352 . 1362)) nil (22562 35107 601036 0) 0 nil]) ((1343 . 1352) (t 22562 34581 0 0)) nil (22562 35107 601038 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 1344) (undo-tree-id0 . 1) (undo-tree-id1 . 1) (undo-tree-id2 . 1) (undo-tree-id3 . 1) (undo-tree-id4 . 1) (undo-tree-id5 . -1)) nil (22562 34581 476887 0) 0 nil]) ((#("        C = 1" 0 8 (fontified t) 8 9 (fontified t face font-lock-variable-name-face) 9 13 (fontified t)) . 1344) (undo-tree-id6 . -11) (undo-tree-id7 . -11) (undo-tree-id8 . -11) (undo-tree-id9 . -11) (undo-tree-id10 . -11) (undo-tree-id11 . -11) (undo-tree-id12 . -11) (undo-tree-id13 . 1) (undo-tree-id14 . 1) (undo-tree-id15 . 13) (undo-tree-id16 . -13)) nil (22562 34581 476922 0) 0 nil]) ((1337 . 1341)) nil (22562 34581 476929 0) 0 nil]) ((#("1" 0 1 (fontified t)) . -1337)) nil (22562 34581 476931 0) 0 nil]) ((1333 . 1338) (t 22562 34523 0 0)) nil (22562 34581 476933 0) 0 nil]) ((1391 . 1394) (t 22562 34098 0 0)) nil (22562 34523 178090 0) 0 nil]) ((apply activate-cursor-for-undo 6) (671 . 672) (apply deactivate-cursor-after-undo 6) (apply activate-cursor-for-undo 7) (768 . 769) (apply deactivate-cursor-after-undo 7) (865 . 866) (apply activate-cursor-for-undo 6) (670 . 671) (apply deactivate-cursor-after-undo 6) (apply activate-cursor-for-undo 7) (766 . 767) (apply deactivate-cursor-after-undo 7) (862 . 863) (apply activate-cursor-for-undo 6) (669 . 670) (apply deactivate-cursor-after-undo 6) (apply activate-cursor-for-undo 7) (764 . 765) (apply deactivate-cursor-after-undo 7) (859 . 860) (apply activate-cursor-for-undo 6) (668 . 669) (apply deactivate-cursor-after-undo 6) (apply activate-cursor-for-undo 7) (762 . 763) (apply deactivate-cursor-after-undo 7) (856 . 857)) nil (22562 34098 537777 0) 0 nil]) ((apply activate-cursor-for-undo 6) (666 . 667) (apply deactivate-cursor-after-undo 6) (apply activate-cursor-for-undo 7) (759 . 760) (apply deactivate-cursor-after-undo 7) (852 . 853) (apply activate-cursor-for-undo 6) (665 . 666) (apply deactivate-cursor-after-undo 6) (apply activate-cursor-for-undo 7) (757 . 758) (apply deactivate-cursor-after-undo 7) (849 . 850) (apply activate-cursor-for-undo 6) (664 . 665) (apply deactivate-cursor-after-undo 6) (apply activate-cursor-for-undo 7) (755 . 756) (apply deactivate-cursor-after-undo 7) (846 . 847) (apply activate-cursor-for-undo 6) (663 . 664) (apply deactivate-cursor-after-undo 6) (apply activate-cursor-for-undo 7) (753 . 754) (apply deactivate-cursor-after-undo 7) (843 . 844) (apply activate-cursor-for-undo 6) (662 . 663) (apply deactivate-cursor-after-undo 6) (apply activate-cursor-for-undo 7) (751 . 752) (apply deactivate-cursor-after-undo 7) (840 . 841) (apply activate-cursor-for-undo 6) (661 . 662) (apply deactivate-cursor-after-undo 6) (apply activate-cursor-for-undo 7) (749 . 750) (apply deactivate-cursor-after-undo 7) (837 . 838) (apply activate-cursor-for-undo 6) (660 . 661) (apply deactivate-cursor-after-undo 6) (apply activate-cursor-for-undo 7) (747 . 748) (apply deactivate-cursor-after-undo 7) (834 . 835) (apply activate-cursor-for-undo 6) (659 . 660) (apply deactivate-cursor-after-undo 6) (apply activate-cursor-for-undo 7) (745 . 746) (apply deactivate-cursor-after-undo 7) (831 . 832) (apply activate-cursor-for-undo 6) (658 . 659) (apply deactivate-cursor-after-undo 6) (apply activate-cursor-for-undo 7) (743 . 744) (apply deactivate-cursor-after-undo 7) (828 . 829) (apply activate-cursor-for-undo 6) (657 . 658) (apply deactivate-cursor-after-undo 6) (apply activate-cursor-for-undo 7) (741 . 742) (apply deactivate-cursor-after-undo 7) (825 . 826)) nil (22562 34098 537815 0) 0 nil]) ((#("s" 0 1 (fontified t)) . -657)) nil (22562 34098 537826 0) 0 nil]) ((#("e" 0 1 (fontified t)) . -658)) nil (22562 34098 537828 0) 0 nil]) ((657 . 659) (t 22562 33575 0 0)) nil (22562 34098 537831 0) 0 nil]) nil nil (22562 34098 537832 0) 0 nil] #2# 3263 42 nil]